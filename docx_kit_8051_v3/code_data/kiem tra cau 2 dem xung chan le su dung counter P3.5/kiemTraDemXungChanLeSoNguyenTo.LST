C51 COMPILER V9.52.0.0   KIEMTRADEMXUNGCHANLESONGUYENTO                                    03/04/2022 09:32:52 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KIEMTRADEMXUNGCHANLESONGUYENTO
OBJECT MODULE PLACED IN kiemTraDemXungChanLeSoNguyenTo.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE kiemTraDemXungChanLeSoNguyenTo.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //POWER BY LE MINH HUU 4/3/2022
   2          //KIEM TRA DEM XUNG CHAN LE SO NGUYEN TO
   3          #include <REGX52.H>
   4          #include <math.h>
   5          
   6          #define on 0
   7          #define off 1
   8          sbit cdv  = P2^4;
   9          sbit cchuc = P2^3;
  10          sbit ctram = P2^2;
  11          sbit cnghin = P2^1;
  12          sbit ccnghin = P2^0;
  13          
  14          //===========================================
  15          void delay(unsigned int time){
  16   1        while(time--);
  17   1      }
  18          //===========================================
  19          void hienThi(unsigned int so){
  20   1        unsigned int cNghin, nghin, tram, chuc, dv;
  21   1        char soht[] = {0x40, 0x79, 0x24, 0x30, 0x19, 0x12, 0x02, 0x78, 0x00, 0x10};
  22   1        
  23   1        cNghin = so / 10000;  
  24   1        so = so % 10000;  //so chuc nghin = so chia lay nguyen cho 10 000, so = so ban dau chia lay du cho 10 000
  25   1        nghin = so / 1000;  
  26   1        so = so % 1000; // so nghin = so chia nguyen cho 1000, roi so = so chia lay du cho 1000
  27   1        tram = so / 100; 
  28   1        so = so % 100;  //so tram = so chia nguyen cho 100
  29   1        chuc = so / 10; //so chuc = so chia nguyen cho 10
  30   1        dv = so % 10; //so dv = so da chia lay du o hang chuc
  31   1        
  32   1        P0 = soht[dv]; cdv = on; delay(1000); cdv = off;
  33   1        P0 = soht[chuc]; cchuc = on; delay(1000); cchuc = off;
  34   1        P0 = soht[tram]; ctram = on; delay(1000); ctram = off;
  35   1        P0 = soht[nghin]; cnghin = on; delay(1000); cnghin = off;
  36   1        P0 = soht[cNghin]; ccnghin = on; delay(1000); ccnghin = off;
  37   1      }
  38          //ham dem so nguyen to
  39          //===========================================
  40          void demNguyenTo(unsigned int count){
  41   1        //so nguyen to la so chi chia het cho 1 va chinh no
  42   1        unsigned int a, dem;
  43   1          //kiem tra xem i co phai la so nguyen to hay khong neu phai thi thuc hien in ra 
  44   1          dem = 0;
  45   1          for(a = 1; a <= (count); a++){
  46   2            if( count % a == 0){
  47   3              dem++;
  48   3            }
  49   2          }
  50   1          if(dem == 2){ //neu dem == 2 thi day la so nguyen to. vi a =1 va a <= i.
  51   2            //dem snt
  52   2            hienThi(count); //hien thi
  53   2            }
  54   1        }
  55          //ham dem chan
C51 COMPILER V9.52.0.0   KIEMTRADEMXUNGCHANLESONGUYENTO                                    03/04/2022 09:32:52 PAGE 2   

  56          //===========================================
  57          void demChan(unsigned int count){
  58   1        if(count % 2 == 0){
  59   2          hienThi(count);
  60   2        }
  61   1      }
  62          //ham dem le  
  63          //===========================================
  64          void demLe(unsigned int count){
  65   1        if(count % 2 == 1){
  66   2          hienThi(count);
  67   2        }
  68   1      } 
  69          //POWER BY LE MINH HUU 4/3/2022
  70          //@copyright
  71          //===========================================
  72          void main(){
  73   1        unsigned int count;
  74   1        //unsigned char high, low;
  75   1      
  76   1        TMOD &= 0x0f; //xoa du lieu tg
  77   1        TMOD |= 0x50; // 0101 000 counter 1 che do 1
  78   1        TL0 = 0x00;
  79   1        TH0 = 0x00;
  80   1        TR1 = 1;  //khoi dong thanh ghi
  81   1      //------------------------------------------------- 
  82   1        while(1){
  83   2          count = TL1 | TH1  <<8; //dem tu hai thanh ghi tl th va dich sang trai 8 bit de do tu thanh ghi tl
  84   2          /*
  85   2      //    high = TH0;
  86   2      //    low = TL0;
  87   2      //    count = high;
  88   2      //    count = count <<8;
  89   2      //    count |=  low;
  90   2          */
  91   2      //-------------------------------------------------
  92   2          //dem xung chan 
  93   2          //demChan(count);
  94   2      //-------------------------------------------------   
  95   2          //dem xung le
  96   2          //demLe(count);
  97   2      //-------------------------------------------------   
  98   2          //dem snt
  99   2          demNguyenTo(count);   
 100   2        }
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    339    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
