#include<reg51.h>

/* Configure the data bus and Control bus as per the hardware connection
   Dtatus bus is connected to P20:P27 and control bus P00:P04*/
#define GlcdDataBus  P2
sbit RS  = P0^0;
sbit RW  = P0^1;
sbit EN  = P0^2;
sbit CS1 = P0^3;
sbit CS2 = P0^4;

/* 5x7 Font including 1 space to display HELLO WORLD */
char H[]={0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00};
char E[]={0x7F, 0x49, 0x49, 0x49, 0x41, 0x00};
char L[]={0x7F, 0x40, 0x40, 0x40, 0x40, 0x00};
char O[]={0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00};

char W[]={0x3F, 0x40, 0x38, 0x40, 0x3F, 0x00};
char R[]={0x7F, 0x09, 0x19, 0x29, 0x46, 0x00};
char D[]={0x7F, 0x41, 0x41, 0x22, 0x1C, 0x00};


/* local function to generate delay */
void delay(int cnt)
{
   int i;
    for(i=0;i<cnt;i++);
}


void Glcd_SelectPage0() // CS1=1, CS2=0
{
    CS1 = 1;
    CS2 = 0;
}

void Glcd_SelectPage1() // CS1=0, CS1=1
{
    CS1 = 0;
    CS2 = 1;
}

/* Function to send the command to LCD */
void Glcd_CmdWrite(char cmd)
{
    GlcdDataBus = cmd;   //Send the Command 
    RS = 0;              // Send LOW pulse on RS pin for selecting Command register
    RW = 0;              // Send LOW pulse on RW pin for Write operation
    EN = 1;              // Generate a High-to-low pulse on EN pin
    delay(100);
    EN = 0;

    delay(1000);
}

/* Function to send the data to LCD */
void Glcd_DataWrite(char dat)
{
    GlcdDataBus = dat;   //Send the data on DataBus
    RS = 1;              // Send HIGH pulse on RS pin for selecting data register
    RW = 0;              // Send LOW pulse on RW pin for Write operation
    EN = 1;              // Generate a High-to-low pulse on EN pin
    delay(100);
    EN = 0;

    delay(1000);
}

void Glcd_DisplayChar(char *ptr_array)
{
    int i;
    for(i=0;i<6;i++) // 5x7 font, 5 chars + 1 blankspace
        Glcd_DataWrite(ptr_array[i]);
}


int main()
{
    /* Select the Page0/Page1 and Turn on the GLCD */
    Glcd_SelectPage0();
    Glcd_CmdWrite(0x3f);
    Glcd_SelectPage1();
    Glcd_CmdWrite(0x3f);
    delay(100);

    /* Select the Page0/Page1 and Enable the GLCD */
    Glcd_SelectPage0();
    Glcd_CmdWrite(0xc0);
    Glcd_SelectPage1();
    Glcd_CmdWrite(0xc0);
    delay(100);

    Glcd_SelectPage0(); // Display HELLO on Page0, Line1
    Glcd_CmdWrite(0xb8);
    Glcd_DisplayChar(H);
    Glcd_DisplayChar(E);
    Glcd_DisplayChar(L);
    Glcd_DisplayChar(L);
    Glcd_DisplayChar(O);

    Glcd_SelectPage1(); // Display WORLD on Page1, Last line
    Glcd_CmdWrite(0xbF);
    Glcd_DisplayChar(W);
    Glcd_DisplayChar(O);
    Glcd_DisplayChar(R);
    Glcd_DisplayChar(L);
    Glcd_DisplayChar(D);

    while(1);
}



















#include <REGX51.H>

sbit LCD_RS  = P2^2;
sbit LCD_RW  = P2^3;
sbit LCD_E  = P2^4;
sbit CS1 = P2^5;
sbit CS2 = P2^6;
sbit LCD_Data = P0;

void delay_us(unsigned int time){
	while(time--);
}
void delay_ms(unsigned int time){
	int i;
	for(i = 0; i < 125; i++){
		while(time--);
	}
}

void lcd_enable()
{
	LCD_E = 1;
	delay_us(50);
	LCD_E = 0;
	delay_us(30);
}
// ==============================================================================

void write_data_lcd(unsigned char WDLCD)
{
	delay_us(200);						// LUU Y SU CAN THIET CUA KHOANG THOI GIAN DELAY NAY 
	LCD_RS = 1;
	LCD_RW = 0;
	LCD_Data = WDLCD;
	lcd_enable();
}

// ==============================================================================

void write_command_lcd(unsigned char WCLCD) 
{
	delay_us(200);						// LUU Y SU CAN THIET CUA KHOANG THOI GIAN DELAY NAY 
	LCD_RS = 0;
	LCD_RW = 0; 
	LCD_Data = WCLCD;
	lcd_enable();
}

// ==============================================================================
	
// HAM KHOI TAO LCD ------------------------------------------------
// MODE 8 bit ------------------------------------------------------
void lcd_init(void)
{
	// Function set
	write_command_lcd(0x30); 					// Chon che do truyen 8 bit
	delay_us(150);											// delay > 100us
	write_command_lcd(0x30); 					// Chon che do truyen 8 bit
	delay_us(50);												// delay > 37us
	
	// Display ON/OFF control
	write_command_lcd(0x0C); 					// Cho phep hien thi ra LCD 128x64
	delay_us(120);											// delay > 100us
	
	// Clear LCD
	write_command_lcd(0x01); 					// Xoa man hinh			
	delay_ms(40);												// delay > 10ms
	
	// Entry mode set
	write_command_lcd(0x06); 					// Chon che do hien thi ki tu ra man hinh LCD 128x64 (Ki tu sau xuat hien ben phai ki tu truoc)
}
// ==============================================================================

void lcd_clear(void) 
{
	write_command_lcd(0x01);
}

// ==============================================================================
void lcd_putchar(unsigned char X, unsigned char Y, unsigned char DData)
{
	if(Y<1)
		Y=1;
	if(Y>4)
		Y=4;
	X &= 0x0F; 
	switch(Y)
	{
		case 1:X|=0X80;break;
		case 2:X|=0X90;break;
		case 3:X|=0X88;break;
		case 4:X|=0X98;break;
	}
	write_command_lcd(X); 
	write_data_lcd(DData);
}
// ==============================================================================
void lcd_puts(unsigned char X, unsigned char Y, unsigned char *DData)
{
	unsigned char ListLength,X2;

	ListLength = 0;
	X2=X;
	if(Y<1)
		Y=1;
	if(Y>4)
		Y=4;
	X &= 0x0F; 
	switch(Y)
	{
		case 1:X2|=0X80;break;	
		case 2:X2|=0X90;break;
		case 3:X2|=0X88;break;
		case 4:X2|=0X98;break;
	}
	write_command_lcd(X2); 
	while (DData[ListLength]>=0x20) 
	{
		if (X <= 0x0F) 
		{
			write_data_lcd(DData[ListLength]);
			ListLength++;
			X++;
			delay_ms(5);
		}
	}
}
// ==============================================================================
/*
void lcd_display_image  (unsigned char *DData)
{
	unsigned char x,y,i;
	unsigned int tmp=0;
	for(i=0;i<9;)
	{		
		for(x=0;x<32;x++)
		{				
			write_command_lcd(0x34);
			write_command_lcd((0x80+x));
			write_command_lcd((0x80+i));	
			write_command_lcd(0x30);		
			for(y=0;y<16;y++)	
				write_data_lcd(DData[tmp+y]);
			tmp+=16;		
		}
		i+=8;
	}
		write_command_lcd(0x36);	
		write_command_lcd(0x30);
}
*/
/* -----------------END OF FILE---------------------------- */




































#include<reg51.h>

/* Configure the data bus and Control bus as per the hardware connection
   Dtatus bus is connected to P20:P27 and control bus P00:P04*/
#define GlcdDataBus  P0
sbit RS  = P2^2;
sbit RW  = P2^3;
sbit EN  = P2^4;
sbit CS1 = P2^5;
sbit CS2 = P2^6;

/* 5x7 Font including 1 space to display HELLO WORLD */
char H[]={0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00};
char E[]={0x7F, 0x49, 0x49, 0x49, 0x41, 0x00};
char L[]={0x7F, 0x40, 0x40, 0x40, 0x40, 0x00};
char O[]={0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00};

char W[]={0x3F, 0x40, 0x38, 0x40, 0x3F, 0x00};
char R[]={0x7F, 0x09, 0x19, 0x29, 0x46, 0x00};
char D[]={0x7F, 0x41, 0x41, 0x22, 0x1C, 0x00};


/* local function to generate delay */
void delay(int cnt)
{
   int i;
    for(i=0;i<cnt;i++);
}


void Glcd_SelectPage0() // CS1=1, CS2=0
{
    CS1 = 1;
    CS2 = 0;
}

void Glcd_SelectPage1() // CS1=0, CS1=1
{
    CS1 = 0;
    CS2 = 1;
}

/* Function to send the command to LCD */
void Glcd_CmdWrite(char cmd)
{
    GlcdDataBus = cmd;   //Send the Command 
    RS = 0;              // Send LOW pulse on RS pin for selecting Command register
    RW = 0;              // Send LOW pulse on RW pin for Write operation
    EN = 1;              // Generate a High-to-low pulse on EN pin
    delay(100);
    EN = 0;

    delay(1000);
}

/* Function to send the data to LCD */
void Glcd_DataWrite(char dat)
{
    GlcdDataBus = dat;   //Send the data on DataBus
    RS = 1;              // Send HIGH pulse on RS pin for selecting data register
    RW = 0;              // Send LOW pulse on RW pin for Write operation
    EN = 1;              // Generate a High-to-low pulse on EN pin
    delay(100);
    EN = 0;

    delay(1000);
}

void Glcd_DisplayChar(char *ptr_array)
{
    int i;
    for(i=0;i<6;i++) // 5x7 font, 5 chars + 1 blankspace
        Glcd_DataWrite(ptr_array[i]);
}


int main()
{
    /* Select the Page0/Page1 and Turn on the GLCD */
    Glcd_SelectPage0();
    Glcd_CmdWrite(0x3f);
    Glcd_SelectPage1();
    Glcd_CmdWrite(0x3f);
    delay(100);

    /* Select the Page0/Page1 and Enable the GLCD */
    Glcd_SelectPage0();
    Glcd_CmdWrite(0xc0);
    Glcd_SelectPage1();
    Glcd_CmdWrite(0xc0);
    delay(100);

    Glcd_SelectPage0(); // Display HELLO on Page0, Line1
    Glcd_CmdWrite(0xb8);
    Glcd_DisplayChar(H);
    Glcd_DisplayChar(E);
    Glcd_DisplayChar(L);
    Glcd_DisplayChar(L);
    Glcd_DisplayChar(O);

    Glcd_SelectPage1(); // Display WORLD on Page1, Last line
    Glcd_CmdWrite(0xbF);
    Glcd_DisplayChar(W);
    Glcd_DisplayChar(O);
    Glcd_DisplayChar(R);
    Glcd_DisplayChar(L);
    Glcd_DisplayChar(D);

    while(1);
}/*******************************************************************
  *	@file 		glcd.c
  * @author  	MinhHaGroup
  * @version 	V1.0.0
  * @date   
  * @brief  	File cac ham de dieu khien LCD 128x64 mode 8 bit
********************************************************************/
#include "main.h"

void lcd_enable()
{
	LCD_E = 1;
	delay_us(50);
	LCD_E = 0;
	delay_us(30);
}
// ==============================================================================

void write_data_lcd(unsigned char WDLCD)
{
	delay_us(200);						// LUU Y SU CAN THIET CUA KHOANG THOI GIAN DELAY NAY 
	LCD_RS = 1;
	LCD_RW = 0;
	LCD_Data = WDLCD;
	lcd_enable();
}

// ==============================================================================

void write_command_lcd(unsigned char WCLCD) 
{
	delay_us(200);						// LUU Y SU CAN THIET CUA KHOANG THOI GIAN DELAY NAY 
	LCD_RS = 0;
	LCD_RW = 0; 
	LCD_Data = WCLCD;
	lcd_enable();
}

// ==============================================================================
	
// HAM KHOI TAO LCD ------------------------------------------------
// MODE 8 bit ------------------------------------------------------
void lcd_init(void)
{
	// Function set
	write_command_lcd(0x30); 					// Chon che do truyen 8 bit
	delay_us(150);											// delay > 100us
	write_command_lcd(0x30); 					// Chon che do truyen 8 bit
	delay_us(50);												// delay > 37us
	
	// Display ON/OFF control
	write_command_lcd(0x0C); 					// Cho phep hien thi ra LCD 128x64
	delay_us(120);											// delay > 100us
	
	// Clear LCD
	write_command_lcd(0x01); 					// Xoa man hinh			
	delay_ms(40);												// delay > 10ms
	
	// Entry mode set
	write_command_lcd(0x06); 					// Chon che do hien thi ki tu ra man hinh LCD 128x64 (Ki tu sau xuat hien ben phai ki tu truoc)
}
// ==============================================================================

void lcd_clear(void) 
{
	write_command_lcd(0x01);
}

// ==============================================================================
void lcd_putchar(unsigned char X, unsigned char Y, unsigned char DData)
{
	if(Y<1)
		Y=1;
	if(Y>4)
		Y=4;
	X &= 0x0F; 
	switch(Y)
	{
		case 1:X|=0X80;break;
		case 2:X|=0X90;break;
		case 3:X|=0X88;break;
		case 4:X|=0X98;break;
	}
	write_command_lcd(X); 
	write_data_lcd(DData);
}
// ==============================================================================
void lcd_puts(unsigned char X, unsigned char Y, unsigned char *DData)
{
	unsigned char ListLength,X2;

	ListLength = 0;
	X2=X;
	if(Y<1)
		Y=1;
	if(Y>4)
		Y=4;
	X &= 0x0F; 
	switch(Y)
	{
		case 1:X2|=0X80;break;	
		case 2:X2|=0X90;break;
		case 3:X2|=0X88;break;
		case 4:X2|=0X98;break;
	}
	write_command_lcd(X2); 
	while (DData[ListLength]>=0x20) 
	{
		if (X <= 0x0F) 
		{
			write_data_lcd(DData[ListLength]);
			ListLength++;
			X++;
			delay_ms(5);
		}
	}
}
// ==============================================================================
/*
void lcd_display_image  (unsigned char *DData)
{
	unsigned char x,y,i;
	unsigned int tmp=0;
	for(i=0;i<9;)
	{		
		for(x=0;x<32;x++)
		{				
			write_command_lcd(0x34);
			write_command_lcd((0x80+x));
			write_command_lcd((0x80+i));	
			write_command_lcd(0x30);		
			for(y=0;y<16;y++)	
				write_data_lcd(DData[tmp+y]);
			tmp+=16;		
		}
		i+=8;
	}
		write_command_lcd(0x36);	
		write_command_lcd(0x30);
}
*/
/* -----------------END OF FILE---------------------------- */

